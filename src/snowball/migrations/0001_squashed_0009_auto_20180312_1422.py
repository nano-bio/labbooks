# Generated by Django 3.0.8 on 2020-07-02 13:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('snowball', '0001_initial'), ('snowball', '0002_auto_20160428_1522'), ('snowball', '0003_auto_20161207_1148'), ('snowball', '0004_auto_20171002_1549'), ('snowball', '0005_measurement_text'), ('snowball', '0006_measurement_chan'), ('snowball', '0007_auto_20171009_0930'), ('snowball', '0008_measurement_short_description'), ('snowball', '0009_auto_20180312_1422')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('firstname', models.CharField(max_length=50)),
                ('lastname', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Turbopump',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(blank=True, max_length=100)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('service_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TurbopumpStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current', models.FloatField()),
                ('date', models.DateField(auto_now_add=True)),
                ('pump', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snowball.Turbopump')),
            ],
            options={
                'verbose_name_plural': 'Turbopump Status',
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField()),
                ('attachment', models.FileField(blank=True, default=b'', upload_to=b'snowball/techjournal/')),
                ('written_notes', models.ImageField(blank=True, upload_to=b'snowball/techjournal/notes/')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snowball.Operator')),
            ],
            options={
                'ordering': ['time'],
                'verbose_name_plural': 'Journal Entries',
            },
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starttime', models.DateTimeField()),
                ('datafile', models.FileField(max_length=400, upload_to=b'snowball/%Y/%m/%d/%H/%M/%S/')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snowball.Operator')),
                ('he_temp', models.FloatField(default=9.5, verbose_name=b'He temp')),
                ('ec', models.FloatField(default=100.0, verbose_name=b'Electron Current')),
                ('ee', models.FloatField(default=70.0, verbose_name=b'Electron Energy')),
                ('he_pres', models.FloatField(default=20.0, verbose_name=b'He pressure')),
                ('text', models.TextField(blank=True, max_length=1500, verbose_name=b'Comment')),
                ('chan', models.FloatField(default=3500.0, verbose_name=b'Channeltron Voltage')),
                ('short_description', models.CharField(blank=True, max_length=160)),
                ('ec_2', models.FloatField(default=100.0, verbose_name=b'Electron Current IS2')),
                ('ee_2', models.FloatField(default=70.0, verbose_name=b'Electron Energy IS2')),
            ],
            options={
                'ordering': ['-starttime'],
                'get_latest_by': 'starttime',
            },
        ),
    ]
